repeat wait() until game:IsLoaded()

local library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
local Wait = library.subs.Wait -- Only returns if the GUI has not been terminated. For 'while Wait() do' loops

local Main = library:CreateWindow({
    Name = "Papa Hub",
    Themeable = false
})

local AutoFarmTab = Main:CreateTab({
    Name = "AutoFarm"
})

local Farm = AutoFarmTab:CreateSection({
    Name = "Farm"
})

local worlds = {}
for _,v in ipairs(game:GetService("Workspace"):WaitForChild("Enemies"):GetChildren()) do
    if not table.find(worlds,v.Name) then
        table.insert(worlds,v.Name)
    end
end

_G.Cometworlds2 = {}
for i,v in ipairs(game:GetService("Workspace"):WaitForChild("Comets"):GetChildren()) do
    if not table.find(_G.Cometworlds2,v.Name) then
        table.insert(_G.Cometworlds2,v.Name)
    end
end

_G.Cometworlds = {}
for i,v in ipairs(game:GetService("Workspace"):WaitForChild("Comets"):GetChildren()) do
    if v:IsA("Folder") then
        _G.Cometworlds[v.Name] = false
    end
end




_G.A = {
    FarmSelected = false,
    AutoCoins = false,
    AutoEgg = false,
    SelectedWorld = "Demon Village",
    SelectedMob = "Weak Demon",
    SelectedEgg = "Slayer Pod",
    Autoequipbestsword = false,
    Autoequipbestpet = false,
    Dofarm = true,
    Autotrial = false,
    Autocomet = false,
    TpBackLength = 0,
    PickupCoinDelay = 0.3,
    AutoClaimUpgrades = false,
    TweenSpeed = 0.5,
    FarmSelectedWorldValue = "Demon Village",
    FarmSelectedWorld = false
}

local loadSettings = function()
    local HS = game:GetService("HttpService")
    if readfile and isfile and isfile("AHS "..game.Players.LocalPlayer.Name..".json") then
        _G.A = HS:JSONDecode(readfile("AHS "..game.Players.LocalPlayer.Name..".json"))
    end
    if readfile and isfile and isfile("AHS-Comets "..game.Players.LocalPlayer.Name..".json") then
        _G.Cometworlds = HS:JSONDecode(readfile("AHS-Comets "..game.Players.LocalPlayer.Name..".json"))
    end
end

loadSettings()

local updJS = function()
    local j
    local HS = game:GetService("HttpService")
    if writefile then
        d = HS:JSONEncode(_G.A)
        writefile("AHS "..game.Players.LocalPlayer.Name..".json",d)
    end
    if writefile then
        d = HS:JSONEncode(_G.Cometworlds)
        writefile("AHS-Comets "..game.Players.LocalPlayer.Name..".json",d)
    end
end


Farm:AddToggle({
    Name = "Auto Farm Selected",
    Value = _G.A.FarmSelected,
    Callback = function(newValue)
        _G.A.FarmSelected = newValue
        updJS()
    end
})


local CoinsSection = AutoFarmTab:CreateSection({
    Name = "Coin",
    Side = "Right"
})

CoinsSection:AddToggle({
    Name = "Auto Collect Coins",
    Value = _G.A.AutoCoins,
    Callback = function(newValue)
        _G.A.AutoCoins = newValue
        updJS()
    end
})

CoinsSection:AddSlider({
    Name = "Auto Coin Delay",
    Min = 0.01,
    Max = 1,
    Value = _G.A.PickupCoinDelay,
    Callback = function(newValue)
        _G.A.PickupCoinDelay = newValue
        updJS()
    end
})

CoinsSection:AddLabel({
    Name = "Other"
})

CoinsSection:AddToggle({
    Name = "Tween To Coins",
    Value = _G.A.SafeAutoCoins,
    Callback = function(newValue)
        _G.A.SafeAutoCoins = newValue
        updJS()
    end
})

CoinsSection:AddSlider({
    Name = "Tween Length",
    Min = 0.01,
    Max = 1,
    Value = _G.A.TweenSpeed,
    Callback = function(newValue)
        _G.A.TweenSpeed = newValue
        updJS()
    end
})


local mobs = {}
for i,v in ipairs(game:GetService("Workspace"):WaitForChild("Enemies"):GetDescendants()) do
    if v:FindFirstChildOfClass("Humanoid") then
        if not table.find(mobs,v.Name) then
            table.insert(mobs,v.Name)
        end
    end
end

local levelDrop = Farm:AddSearchBox({
    Name = "Select Mob",
    Value = _G.A.SelectedMob,
    List = mobs,
    Callback = function(newValue)
        _G.A.SelectedMob = newValue
        updJS()
    end
})

Farm:AddSlider({
    Name = "TP Offset",
    Min = 0,
    Max = 15,
    Value = _G.A.TpBackLength,
    Callback = function(newValue)
        _G.A.TpBackLength = newValue
        updJS()
    end
})

Farm:AddLabel({Name = "Other"})

Farm:AddToggle({
    Name = "Farm Selected World",
    Value = _G.A.FarmSelectedWorld,
    Callback = function(newValue)
        _G.A.FarmSelectedWorld = newValue
        updJS()
    end
})

Farm:AddSearchBox({
    Name = "Select World To Farm",
    List = worlds,
    Value = _G.A.FarmSelectedWorldValue,
    Callback = function(newValue)
        _G.A.FarmSelectedWorldValue = newValue
        updJS()
    end
})


local eggs = {}
for _,v in ipairs(game:GetService("Workspace"):WaitForChild("Eggs"):GetChildren()) do
    if not table.find(eggs,tostring(v.Name)) then
        table.insert(eggs,tostring(v.Name))
    end
end

local Egg = AutoFarmTab:CreateSection({
    Name = "Egg"
})

Egg:AddToggle({
    Name = "Auto Buy Egg",
    Value = _G.A.AutoEgg,
    Callback = function(newValue)
        _G.A.AutoEgg = newValue
        updJS()
    end
})

Egg:AddSearchBox({
    Name = "Select Egg",
    Value = _G.A.SelectedEgg,
    List = eggs,
    Callback = function(newValue)
        _G.A.SelectedEgg = newValue
        updJS()
    end
})

local trial = AutoFarmTab:CreateSection({
    Name = "Time Trial"
})

local tt = trial:AddLabel({
    Text = "TT In "..game:GetService("Workspace").TimeTrial.LobbyTimer.Timer.Label.Text..""
})

game:GetService("Workspace").TimeTrial.LobbyTimer.Timer.Label.Changed:Connect(function()
    tt:Set("TT In "..game:GetService("Workspace").TimeTrial.LobbyTimer.Timer.Label.Text.."")
end)

trial:AddToggle({
    Name = "Auto Time Trial",
    Value = _G.A.Autotrial,
    Callback = function(newValue)
        _G.A.Autotrial = newValue
        updJS()
    end
})

local comet = AutoFarmTab:CreateSection({
    Name = "Comet"
})

comet:AddToggle({
    Name = "Auto Comet",
    Value = _G.A.Autocomet,
    Callback = function(newValue)
        _G.A.Autocomet = newValue
        updJS()
    end
})

comet:AddLabel({
    Name = "Comets"
})

for i = 1, #_G.Cometworlds2 do
    comet:AddToggle({
        Name = "Do ".._G.Cometworlds2[i].."",
        Value = _G.Cometworlds[_G.Cometworlds2[i]],
        Callback = function(newValue)
            _G.Cometworlds[_G.Cometworlds2[i]] = newValue
            updJS()
        end
    })
end

local misc = AutoFarmTab:CreateSection({
    Name = "Misc",
    Side = "Right"
})

misc:AddToggle({
    Name = "Auto Equip Best Sword",
    Value = _G.A.Autoequipbestsword,
    Callback = function(newValue)
        _G.A.Autoequipbestsword = newValue
        updJS()
    end
})

misc:AddToggle({
    Name = "Auto Equip Best Pets",
    Value = _G.A.Autoequipbestpet,
    Callback = function(newValue)
        _G.A.Autoequipbestpet = newValue
        updJS()
    end
})

misc:AddToggle({
    Name = "Auto Claim Upgrades",
    Value = _G.A.AutoClaimUpgrades,
    Callback = function(newValue)
        _G.A.AutoClaimUpgrades = newValue
        updJS()
    end
})

misc:AddSlider({
    Name = "WalkSpeed",
    Min = 5,
    Max = 500,
    Value = 16,
    Callback = function(newValue)
        game:GetService("Players").LocalPlayer.WalkSpeed.Value = newValue
        updJS()
    end
})

_G.Doingcomet = false
_G.Dofarm = true
_G.Intrial = false

task.spawn(function()
    while task.wait() do
        task.wait(.1)
        if _G.A.FarmSelected and _G.Dofarm and not _G.Doingcomet and not _G.Intrial and not _G.A.FarmSelectedWorld then
            for i,v in pairs(game:GetService("Workspace"):FindFirstChild("Enemies"):GetDescendants()) do
                if v.Name == _G.A.SelectedMob and v:FindFirstChildOfClass("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("HP") and v:FindFirstChild("HP").Value > 0 then
                    --pcall(function()
                        repeat
                            if _G.A.FarmSelected and _G.Dofarm and not _G.Doingcomet and not _G.Intrial and not _G.A.FarmSelectedWorld then
                                repeat wait() until not _G.collectingCoins
                                pcall(function()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,0,_G.A.TpBackLength)
                                    task.wait(.1)
                                    game:GetService("ReplicatedStorage").Remotes.WeaponRemote:FireServer(v)
                                end)
                            else
                                break
                            end
                        until v:FindFirstChild("HP").Value <= 0
                        if _G.A.AutoCoins or _G.A.SafeAutoCoins then
                            task.wait(.1)
                        end
                   -- end)


                    -- not v:FindFirstChildOfClass("Humanoid") or     
                    --repeat if _G.FarmSelected then pcall(function() game.Players.LocalPlayer.Character.CFrame = v.HumanoidRootPart.CFrame task.wait(.5) game:GetService("ReplicatedStorage").Remotes.WeaponRemote:FireServer(v) end) else break end until v.Humanoid.Health <= 0
                    break
                end
            end
        end
        --

        if _G.A.FarmSelectedWorld and _G.Dofarm and not _G.Doingcomet and not _G.Intrial then
            for i,v in pairs(game:GetService("Workspace"):FindFirstChild("Enemies"):FindFirstChild(_G.A.FarmSelectedWorldValue):GetChildren()) do
                if v:FindFirstChildOfClass("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("HumanoidRootPart").CFrame ~= CFrame.new(0, -1000000, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1) and v:FindFirstChild("HP") and v:FindFirstChild("HP").Value > 0 then
                    pcall(function()
                        repeat
                            if _G.A.FarmSelectedWorld and _G.Dofarm and not _G.Doingcomet and not _G.Intrial then
                                repeat wait() until not _G.collectingCoins
                                pcall(function()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,0,_G.A.TpBackLength)
                                    task.wait(.1)
                                    game:GetService("ReplicatedStorage").Remotes.WeaponRemote:FireServer(v)
                                end)
                            else
                                break
                            end
                        until v:FindFirstChild("HP").Value <= 0
                        if _G.A.AutoCoins or _G.A.SafeAutoCoins then
                            task.wait(.1)
                        end
                    end)


                    -- not v:FindFirstChildOfClass("Humanoid") or     
                    --repeat if _G.FarmSelected then pcall(function() game.Players.LocalPlayer.Character.CFrame = v.HumanoidRootPart.CFrame task.wait(.5) game:GetService("ReplicatedStorage").Remotes.WeaponRemote:FireServer(v) end) else break end until v.Humanoid.Health <= 0
                    break
                end
            end
        end

        --
    end
end)

task.spawn(function()
    while task.wait() do
        task.wait(.1)
        if _G.A.Autocomet and _G.Dofarm and not _G.Intrial  then
            for i,v in pairs(game:GetService("Workspace"):FindFirstChild("Comets"):GetDescendants()) do
                if v:IsA("Model") and _G.Cometworlds[v.Parent.Name] and v:FindFirstChild("HP").Value > 0 then
                    _G.Doingcomet = true
                    repeat
                        if _G.A.Autocomet and _G.Dofarm and not _G.Intrial then
                            repeat wait() until not _G.collectingCoins
                            pcall(function()
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.PrimaryPart.CFrame * CFrame.new(0,7,0)
                                task.wait(.1)
                                game:GetService("ReplicatedStorage").Remotes.WeaponRemote:FireServer(v)
                            end)
                        else
                            break
                        end
                    until not v.Parent:FindFirstChild("HP")
                    _G.Doingcomet = false
                           
                    break
                end
            end
        end
    end
end)

task.spawn(function()
    while task.wait() do
        wait()
        if game:GetService("Workspace"):WaitForChild("TemporaryAssets"):FindFirstChild("Coin") then
            if _G.A.AutoCoins or _G.A.SafeAutoCoins then
                _G.collectingCoins = true
            end
        else
            _G.collectingCoins = false
        end
        if _G.A.AutoCoins and not _G.A.SafeAutoCoins then
                    for i,v in pairs(game:GetService("Workspace").TemporaryAssets:GetChildren()) do
                        if v.Name == "Coin" then
                            pcall(function()
                                    if v.PrimaryPart.CFrame ~= CFrame.new(-349.096436, 0.862822592, -52.8778076, 0, 0, 1, -1, 0, 0, 0, -1, 0) then
                                        v.PrimaryPart.CanCollide = false
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.PrimaryPart.CFrame
                                        task.wait(_G.A.PickupCoinDelay)
                                    else
                                        v:Destroy()
                                    end
                            end)
                        end
                    end
        end
        if _G.A.SafeAutoCoins then
            for i,v in pairs(game:GetService("Workspace").TemporaryAssets:GetChildren()) do
                if v.Name == "Coin" then
                    local TweenService = game:GetService("TweenService")
                    pcall(function()
                        if v.PrimaryPart.CFrame ~= CFrame.new(-349.096436, 0.862822592, -52.8778076, 0, 0, 1, -1, 0, 0, 0, -1, 0) then
                            v.PrimaryPart.CanCollide = false
                                local tweenInfo = TweenInfo.new(
                                _G.A.TweenSpeed, -- Time
                                Enum.EasingStyle.Linear, -- EasingStyle
                                Enum.EasingDirection.Out, -- EasingDirection
                                0, -- RepeatCount (when less than zero the tween will loop indefinitely)
                                false, -- Reverses (tween will reverse once reaching it's goal)
                                0 -- DelayTime
                                )
                                
                            local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, tweenInfo, {CFrame = v.PrimaryPart.CFrame}):Play()
                            task.wait(_G.A.TweenSpeed)
                        end
                    end)
                    break
                end
            end
        end
    end
end)

task.spawn(function()
    while task.wait(.5) do
        if _G.A.AutoEgg then
            game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(_G.A.SelectedEgg,false,false)
            wait(1)
        end
    end
end)

task.spawn(function()
    while task.wait() do
        wait(5)
        if _G.A.Autoequipbestsword then
            local button = game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Frames.Inventory.Main.Configure.EquipBest
            local events = {"MouseButton1Click", "MouseButton1Down", "Activated"}
            for i,v in pairs(events) do
                for i,v in pairs(getconnections(button[v])) do
                    v:Fire()
                end
            end
        end
        if _G.A.Autoequipbestpet then
            local button = game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Frames.Companions.Main.Configure.EquipBest
            local events = {"MouseButton1Click", "MouseButton1Down", "Activated"}
            for i,v in pairs(events) do
                for i,v in pairs(getconnections(button[v])) do
                    v:Fire()
                end
            end
        end
    end
end)

task.spawn(function()
    while task.wait() do
        if _G.A.Autotrial then
            if _G.A.Autotrial and not _G.Intrial then
            wait(.5)
                if not game:GetService("Players").LocalPlayer.PlayerGui.MainGui.HUD.Bottom.TimeTrialInfo.Visible then
                    local timer = game:GetService("Workspace").TimeTrial.LobbyTimer.Timer.Label
                    local a = tostring(timer.Text):split(":")
                    if a[1] == "00" then
                        if _G.A.Autotrial and not _G.Intrial then
                            pcall(function()
                                _G.Dofarm = false
                                _G.Doingcomet = false
                                repeat wait(.3)
                                    repeat wait() until not _G.collectingCoins
                                if _G.A.Autotrial then
                                    pcall(function()
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").TimeTrial.Teleporters.LobbyDestination.CFrame
                                    end)
                                else
                                    break
                                end
                            until game:GetService("Workspace").TimeTrial.LobbyTimer.Timer.Label.Text == "00:04"

                                wait(5)

                                repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui.MainGui.HUD.Bottom.TimeTrialInfo.Visible == true
                                _G.FarmTrial = true
                            end)
                        end
                    end
                end
            end
        end
    end
end)

task.spawn(function()
    while task.wait() do
        repeat wait(.5) until _G.FarmTrial
        _G.Intrial = true
        if game:GetService("Players").LocalPlayer.PlayerGui.MainGui.HUD.Bottom.TimeTrialInfo.Visible == false then
            _G.Dofarm = true
            _G.FarmTrial = false
            _G.Intrial = false
            return
        end
        local chests = game:GetService("Workspace"):FindFirstChild("Chests"):GetChildren()
        if #chests > 0 then
            task.spawn(function()
                repeat game:GetService("ReplicatedStorage").Remotes.ProgressTrial:FireServer() task.wait(.5) until #game:GetService("Workspace"):FindFirstChild("TimeTrial"):FindFirstChild("ActiveEnemies"):GetChildren() > 0
            end)
            for i,v in pairs(chests) do
                if v:FindFirstChild("HP").Value > 0 then
                    pcall(function()
                        repeat
                            if true then
                                repeat wait() until not _G.collectingCoins
                                pcall(function()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.PrimaryPart.CFrame * CFrame.new(0,20,5)
                                    task.wait(.1)
                                    game:GetService("ReplicatedStorage").Remotes.WeaponRemote:FireServer(v)
                                end)
                            else
                                break
                            end
                        until tonumber(v:FindFirstChild("HP").Value) <= 0
                        if _G.A.AutoCoins or _G.A.SafeAutoCoins then
                            task.wait(.1)
                        end
                    end)
                end
            end
        end
        game:GetService("ReplicatedStorage").Remotes.ProgressTrial:FireServer()
        for i,v in pairs(game:GetService("Workspace"):FindFirstChild("TimeTrial"):FindFirstChild("ActiveEnemies"):GetChildren()) do
            if v:FindFirstChildOfClass("Humanoid") and v:FindFirstChild("HumanoidRootPart").CFrame ~= CFrame.new(0, -1000000, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1) and v:FindFirstChild("HP").Value > 0 then
                pcall(function()
                    repeat
                        if true then
                            repeat wait() until not _G.collectingCoins
                            pcall(function()
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,0,_G.A.TpBackLength)
                                task.wait(.1)
                                game:GetService("ReplicatedStorage").Remotes.WeaponRemote:FireServer(v)
                            end)
                        else
                            break
                        end
                    until
                        tonumber(v:FindFirstChild("HP").Value) <= 0
                        if _G.A.AutoCoins or _G.A.SafeAutoCoins then
                            task.wait(.1)
                        end
                end)
                break
            end
        end
    end
end)

task.spawn(function()
    while task.wait() do
        task.wait(5)
        if _G.A.AutoClaimUpgrades then
            for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Frames.Upgrades.Main.ScrollList:GetChildren()) do
                pcall(function()
                    if v:FindFirstChild("ProgressLabel") and v.ProgressLabel.Text == "CLAIM" then
                        local UpgradeName = v.Name
                        local UpgradeValue = UpgradeName:sub(#UpgradeName, #UpgradeName)
                        local RealUpgradeNameSplit = UpgradeName:split(UpgradeValue)
                        local upgradename = RealUpgradeNameSplit[1]
                        local upgradeupgrade = tonumber(UpgradeValue)
                        game:GetService("ReplicatedStorage").Remotes.ClaimUpgrade:FireServer(upgradename,upgradeupgrade)
                    end
                end)
            end
        end
    end
end)

task.spawn(function()
    while task.wait() do
        for i,v in ipairs(game:GetService("Workspace").Enemies:GetDescendants()) do
            if v:FindFirstChild("HumanoidRootPart") then
                if v:FindFirstChild("HumanoidRootPart").CFrame == CFrame.new(0, -1000000, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1) then
                    v:Destroy()
                    task.wait(.01)
                end
            end
        end
        for i,v in ipairs(game.workspace.TemporaryAssets:GetDescendants()) do
            pcall(function()
                if v.PrimaryPart.CFrame == CFrame.new(-349.096436, 0.862822592, -52.8778076, 0, 0, 1, -1, 0, 0, 0, -1, 0) then
                    v:Destroy()
                    task.wait(0.01)
                end
            end)
        end
        task.wait(5)
    end
end)
